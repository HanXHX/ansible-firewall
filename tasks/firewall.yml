---

- name: SHELL | Get SSHD port
  shell: ss -nlpt | awk '/"sshd"/ { print $4 }' | head -n 1 | cut -d ':' -f 2
  register: sshd_port
  changed_when: false
  check_mode: no

- name: UFW | Allow current SSH port
  ufw:
    rule: allow
    proto: tcp
    to_port: "{{ sshd_port.stdout }}"
    comment: "Ansible: auto accept SSH"
  when: firewall_auto_open_ssh

- name: UFW | Allow TCP ports
  ufw:
    rule: allow
    proto: tcp
    to_port: "{{ item }}"
    comment: "Ansible: allow tcp port"
  with_items: "{{ firewall_open_tcp_ports }}"

- name: UFW | Allow UDP ports
  ufw:
    rule: allow
    proto: udp
    to_port: "{{ item }}"
    comment: "Ansible: allow tcp port"
  with_items: "{{ firewall_open_udp_ports }}"

- name: UFW | Custom rules
  ufw:
    rule: "{{ item.rule | default('allow') }}"
    proto: "{{ item.proto | default('any') }}"
    from_port: "{{ item.from_port | default(omit) }}"
    to_port: "{{ item.to_port | default(omit) }}"
    src: "{{ item.src | default('any') }}"
    dest: "{{ item.dest | default(omit) }}"
    route: "{{ item.route | default(omit) }}"
    direction: "{{ item.direction | default(omit) }}"
    interface: "{{ item.interface | default(omit) }}"
    comment: "Ansible: custom rule"
  with_items: "{{ firewall_custom_rules }}"

- name: UFW | Log level
  ufw: logging={{ firewall_logging }}

- name: UFW | Enable firewall
  ufw: state=enabled

- name: UFW | Allow whitelisted hosts
  ufw:
    rule: allow
    src: "{{ item }}"
    insert: 1
    insert_relative_to: "{% if item | ipv6 %}first-ipv6{% else %}first-ipv4{% endif %}"
    comment: "Ansible: whitelist"
  with_items: "{{ firewall_whitelisted_hosts }}"

- name: UFW | Deny blacklisted hosts
  ufw:
    rule: deny
    src: "{{ item }}"
    insert: 2
    insert_relative_to: "{% if item | ipv6 %}first-ipv6{% else %}first-ipv4{% endif %}"
    comment: "Ansible: blacklist"
  with_items: "{{ firewall_blacklisted_hosts }}"

- name: UFW | Delete current SSH port
  ufw:
    rule: allow
    proto: tcp
    to_port: "{{ sshd_port.stdout }}"
    delete: yes
  when: not firewall_auto_open_ssh
