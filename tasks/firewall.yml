---

# =============================================================
# BLACKLIST
# =============================================================

- name: UFW | Deny blacklisted hosts
  ufw:
    rule: deny
    src: "{{ item }}"
    insert_relative_to: "{% if item | ipv6 %}first-ipv6{% else %}first-ipv4{% endif %}"
    comment: "Ansible: blacklist"
  with_items: "{{ firewall_blacklisted_hosts }}"

- name: UFW | Deny Blacklisted DNS IP4
  ufw:
    rule: deny
    src: "{{ item.1 }}"
    insert_relative_to: "first-ipv4"
    comment: "Ansible: blacklist DNS IPv4 {{ item.0.dns }}"
  loop: "{{ __blacklist_dns | subelements('ip4') }}"

- name: UFW | Deny Blacklisted DNS IP6
  ufw:
    rule: deny
    src: "{{ item.1 }}"
    insert_relative_to: "first-ipv6"
    comment: "Ansible: blacklist DNS IPv6 {{ item.0.dns }}"
  loop: "{{ __blacklist_dns | subelements('ip6') }}"

# =============================================================
# WHITELIST
# =============================================================

- name: UFW | Allow whitelisted hosts
  ufw:
    rule: allow
    src: "{{ item }}"
    insert_relative_to: "{% if item | ipv6 %}first-ipv6{% else %}first-ipv4{% endif %}"
    comment: "Ansible: whitelist"
  with_items: "{{ firewall_whitelisted_hosts }}"

- name: UFW | Allow Whitelisted DNS IP4
  ufw:
    rule: allow
    src: "{{ item.1 }}"
    insert_relative_to: "first-ipv4"
    comment: "Ansible: whitelist DNS IPv4 {{ item.0.dns }}"
  loop: "{{ __whitelist_dns | subelements('ip4') }}"

- name: UFW | Allow Whitelisted DNS IP6
  ufw:
    rule: allow
    src: "{{ item.1 }}"
    insert_relative_to: "first-ipv6"
    comment: "Ansible: whitelist DNS IPv6 {{ item.0.dns }}"
  loop: "{{ __whitelist_dns | subelements('ip6') }}"


# =============================================================
# SSH
# =============================================================
- name: SHELL | Get SSHD port
  shell: set -o pipefail && ss -nlpt | awk '/"sshd"/ { print $4 }' | head -n 1 | cut -d ':' -f 2
  args:
    executable: /bin/bash
  register: sshd_port
  changed_when: false
  check_mode: false

- name: UFW | Allow current SSH port
  ufw:
    rule: allow
    proto: tcp
    to_port: "{{ sshd_port.stdout }}"
    comment: "Ansible: auto accept SSH"
  when: firewall_auto_open_ssh

# =============================================================
# Global allow
# =============================================================

- name: UFW | Allow TCP ports
  ufw:
    rule: allow
    proto: tcp
    to_port: "{{ item }}"
    comment: "Ansible: allow TCP port"
  with_items: "{{ firewall_open_tcp_ports }}"

- name: UFW | Allow UDP ports
  ufw:
    rule: allow
    proto: udp
    to_port: "{{ item }}"
    comment: "Ansible: allow UDP port"
  with_items: "{{ firewall_open_udp_ports }}"

# =============================================================
# Misc
# =============================================================

- name: UFW | Custom rules
  ufw:
    rule: "{{ item.rule | default('allow') }}"
    proto: "{{ item.proto | default('any') }}"
    from_port: "{{ item.from_port | default(omit) }}"
    to_port: "{{ item.to_port | default(omit) }}"
    src: "{{ item.src | default('any') }}"
    dest: "{{ item.dest | default(omit) }}"
    route: "{{ item.route | default(omit) }}"
    direction: "{{ item.direction | default(omit) }}"
    interface: "{{ item.interface | default(omit) }}"
    comment: "Ansible: custom rule"
  with_items: "{{ firewall_custom_rules }}"


- name: UFW | Delete current SSH port if needed
  ufw:
    rule: allow
    proto: tcp
    to_port: "{{ sshd_port.stdout }}"
    delete: true
  when: not firewall_auto_open_ssh

- name: UFW | Log level
  ufw:
    logging: "{{ firewall_logging }}"

- name: UFW | Enable firewall
  ufw:
    state: enabled
